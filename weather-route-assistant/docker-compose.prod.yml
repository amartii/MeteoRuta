version: '3.8'

# Configuración adicional para producción
# Usar con: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  redis:
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf

  telegram-bot:
    restart: always
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=warn
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  route-processor:
    restart: always
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=warn
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  weather-orchestrator:
    restart: always
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=warn
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  response-composer:
    restart: always
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=warn
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx proxy para producción
  nginx:
    image: nginx:alpine
    container_name: weather-nginx
    depends_on:
      - telegram-bot
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # Para certificados SSL si los tienes
    restart: always

volumes:
  redis_data:
